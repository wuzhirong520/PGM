import os
import numpy as np
import matplotlib.pyplot as plt

datasets = ['MUV', 'BACE', 'BBBP', 'ClinTox', 'SIDER','ToxCast', 'HIV', 'PCBA', 'Tox21', 'FreeSolv', 'Lipophilicity', 'ESOL']
finetune_scores = [[999999999.0, 0.7861924121372482, 0.7799087350942115, 0.7654639608123642, 0.7576960845483156, 0.7793760539932908, 0.7866273131703517, 0.8189690441086743, 0.7794411674865491, 0.7711481395133755, 0.7827753719840105, 0.7590608776990996],
                    [0.7054371002132196, 999999999.0, 0.7136815920398011, 0.7181592039800995, 0.7216062544420754, 0.7221748400852878, 0.7029140014214641, 0.7254442075337597, 0.7329779673063255, 0.714498933901919, 0.7245557924662402, 0.6986140724946694],
                    [0.9438470496894411, 0.9493982919254659, 999999999.0, 0.9463509316770187, 0.9425271739130435, 0.9545225155279503, 0.9526203416149068, 0.9448951863354036, 0.9434006211180124, 0.9451669254658386, 0.9251164596273291, 0.9413431677018634],
                    [0.7459016510409977, 0.8240406980892446, 0.8356554218930604, 999999999.0, 0.8504145440015982, 0.8229069452174038, 0.8305178589266093, 0.774236910826662, 0.7984203090885741, 0.7737966807939838, 0.7734185253364156, 0.7758219529945631],
                    [0.623484877299781, 0.6267691401542763, 0.6248863956643044, 0.6198601344279998, 999999999.0, 0.6274552092371379, 0.6105718723733639, 0.6105073176363811, 0.633224706155442, 0.6246932989432883, 0.6161567524588716, 0.6241619227628555],
                    [0.649411467925245, 0.6537452367018676, 0.6607451639374441, 0.6619317247742804, 0.6563262303149001, 999999999.0, 0.6421752585790734, 0.6632552905895939, 0.6474295817539781, 0.6651998780338119, 0.6629760173343747, 0.6635532206222157],
                    [0.81648540074466, 0.8065733392122281, 0.816478664511072, 0.8091781182637663, 0.8111760239075053, 0.8054226680384087, 999999999.0, 0.799129188712522, 0.8137896825396826, 0.7969564471879286, 0.7908105526161082, 0.7943446257103665],
                    [0.8213139299617984, 0.8234196066053749, 0.8229147411368635, 0.823463594275054, 0.8257840576800344, 0.8261521164425141, 0.8204783803525846, 999999999.0, 0.8264038958538211, 0.8232997654793435, 0.8212554395682712, 0.8238458716800471],
                    [0.7510613509043509, 0.7613026703477526, 0.7662281843183246, 0.7645764633237604, 0.7570803525231479, 0.7665991146076095, 0.7551084656240267, 0.7566333953045269, 999999999.0, 0.7635420555095767, 0.7589476026677417, 0.7606147304007986],
                    [-3.2857742309570312, -2.183779811859131, -3.3274004459381104, -2.588774013519287, -3.7155613899230957, -2.6853470325469972, -2.0827045679092406, -1.8103657722473145, -3.084203290939331, 999999999.0, -2.9069872856140138, -2.292416882514954],
                    [-0.8491034150123596, -0.8539701581001282, -0.8461845517158508, -0.862350594997406, -0.8561092495918274, -0.8633780956268311, -0.8878098487854004, -0.8286849737167359, -0.8448111653327942, -0.8636900901794433, 999999999.0, -0.8938391447067261],
                    [-1.1656569957733154, -1.1911952257156373, -1.2687829971313476, -1.2650492668151856, -1.212479591369629, -1.248785138130188, -1.2912392139434814, -1.1607176065444946, -1.2068325281143188, -1.1896514177322388, -1.2707115888595581, 999999999.0],
                    ]
PGM_scores =   [[0.0, 1.7232850950676948, 2.24021656322293, 1.5452966908924282, 0.567035676795058, 0.03526793307173648, 0.32554140489082783, 0.024315959308296442, 0.3396617466933094, 9.953791741281748, 1.4250879758037627, 5.504459259100258], 
                [1.7232850950676948, 0.0, 2.854190533980727, 2.3187336046248674, 1.8128186638932675, 1.7233403923455626, 1.751066738506779, 1.723094319459051, 1.7555952945258468, 10.09291154332459, 2.2449619427789003, 5.754615995101631], 
                [2.24021656322293, 2.854190533980727, 0.0, 2.7210655389353633, 2.309759147465229, 2.240116009488702, 2.261977642774582, 2.2399582667276263, 2.2665728465653956, 10.192339541390538, 2.6403958327136934, 5.954598309472203],
                [1.5452966908924282, 2.3187336046248674, 2.7210655389353633, 0.0, 1.6454182332381606, 1.5454144158866256, 1.5786181029397994, 1.545167324366048, 1.5819650434423238, 10.071475990116596, 2.1026417380198836, 5.719633190892637], 
                [0.567035676795058, 1.8128186638932675, 2.309759147465229, 1.6454182332381606, 0.0, 0.5668698941008188, 0.652770177111961, 0.5664427953888662, 0.6597510946448892, 9.969827951863408, 1.5338575758505613, 5.53106889128685], 
                [0.03526793307173648, 1.7233403923455626, 2.240116009488702, 1.5454144158866256, 0.5668698941008188, 0.0, 0.3255320916650817, 0.027000351110473275, 0.3397367618163116, 9.953802218660712, 1.4251559332478791, 5.504461005330086], 
                [0.32554140489082783, 1.751066738506779, 2.261977642774582, 1.5786181029397994, 0.652770177111961, 0.3255320916650817, 0.0, 0.32446161640109494, 0.46810779167572036, 9.959253948181868, 1.4616329281125218, 5.5121141485869884], 
                [0.024315959308296442, 1.723094319459051, 2.2399582667276263, 1.545167324366048, 0.5664427953888662, 0.027000351110473275, 0.32446161640109494, 0.0, 0.3386395110283047, 9.953761473298073, 1.4248317165765911, 5.5044167675077915], 
                [0.3396617466933094, 1.7555952945258468, 2.2665728465653956, 1.5819650434423238, 0.6597510946448892, 0.3397367618163116, 0.46810779167572036, 0.3386395110283047, 0.0, 9.95845883153379, 1.4650181401520967, 5.514807999134064],
                [9.953791741281748, 10.09291154332459, 10.192339541390538, 10.071475990116596, 9.969827951863408, 9.953802218660712, 9.959253948181868, 9.953761473298073, 9.95845883153379, 0.0, 10.056322207674384, 11.395687470212579], 
                [1.4250879758037627, 2.2449619427789003, 2.6403958327136934, 2.1026417380198836, 1.5338575758505613, 1.4251559332478791, 1.4616329281125218, 1.4248317165765911, 1.4650181401520967, 10.056322207674384, 0.0, 5.693847197107971], 
                [5.504459259100258, 5.754615995101631, 5.954598309472203, 5.719633190892637, 5.53106889128685, 5.504461005330086, 5.5121141485869884, 5.5044167675077915, 5.514807999134064, 11.395687470212579, 5.693847197107971, 0.0]]

molecule_sims =[[999990.0, 0.12462606014594355, 0.11566875140963492, 0.10668096203344488, 0.10597707154404834, 0.09901114557112117, 0.11423365953017088, 0.13649573278662402, 0.09774699583503783, 0.0700319506601435, 0.1284080579442933, 0.08668308419433289],
                [0.12462606014594073, 999990.0, 0.11333427695840967, 0.10710789317954773, 0.10666955315230382, 0.0940397896008027, 0.10573547259419444, 0.12597626213096502, 0.0919437211231946, 0.06300170798322118, 0.1259512578691687, 0.07963160732887763], 
                [0.11566875140963456, 0.11333427695840624, 999990.0, 0.10145849042761601, 0.10102068042049925, 0.09303324439369545, 0.1018859390167364, 0.11491080416805291, 0.09161676591486996, 0.0676602990203496, 0.11207886232778785, 0.08199903783860883], 
                [0.10668096203344264, 0.10710789317954582, 0.1014584904276194, 999990.0, 0.09583312768826856, 0.08877172383778686, 0.09524047534947819, 0.10686955908368505, 0.08788989680385134, 0.06484109943661974, 0.10357634300773239, 0.07798343891306066], 
                [0.10597707154405597, 0.10666955315231229, 0.1010206804205022, 0.09583312768827806, 999990.0, 0.08690361271860426, 0.09403016172816012, 0.10620034882287667, 0.08590568149623908, 0.061593187761429295, 0.1040572737454621, 0.07478538844987426], 
                [0.09901114557112298, 0.0940397896008034, 0.09303324439369781, 0.08877172383779085, 0.08690361271860716, 999990.0, 0.089808889181329, 0.09897010886279686, 0.08758081630544085, 0.07227932365735398, 0.0942784278563336, 0.08075655984305748], 
                [0.1142336595301674, 0.10573547259419415, 0.10188593901673552, 0.09524047534947515, 0.09403016172815257, 0.08980888918132157, 999990.0, 0.1130534513636432, 0.08878423712160723, 0.06587142710059908, 0.10751894835820426, 0.0804695903022707], 
                [0.13649573278662985, 0.1259762621309668, 0.11491080416804811, 0.10686955908368762, 0.10620034882286716, 0.09897010886279692, 0.1130534513636416, 999990.0, 0.09782482466300652, 0.0694188159288599, 0.12778011177033635, 0.08586948650819959], 
                [0.09774699583504137, 0.09194372112319893, 0.09161676591487479, 0.08788989680385657, 0.0859056814962392, 0.0875808163054419, 0.08878423712160624, 0.09782482466300411, 999990.0, 0.07248844421174826, 0.09280856594506666, 0.0803883034061875], 
                [0.07003195066013902, 0.0630017079832232, 0.06766029902034931, 0.06484109943661996, 0.06159318776142934, 0.07227932365735358, 0.06587142710059968, 0.06941881592886313, 0.07248844421174969, 999990.0, 0.06518190661077537, 0.07676166787233439], 
                [0.1284080579442998, 0.12595125786917558, 0.11207886232778864, 0.10357634300774464, 0.10405727374545598, 0.09427842785633453, 0.10751894835821023, 0.12778011177033735, 0.09280856594506796, 0.06518190661077992, 999990.0, 0.0816838346872109], 
                [0.08668308419433053, 0.07963160732887324, 0.08199903783860259, 0.07798343891305745, 0.07478538844987077, 0.08075655984305208, 0.08046959030226727, 0.08586948650819792, 0.08038830340618641, 0.07676166787232824, 0.0816838346872033, 999990.0]]

PGM_distance = np.array(PGM_scores)
molecule_distance = 1 / np.array(molecule_sims)

root_path = "./visualize"

def visualize(scores1, scores2, name):
    fig, axes = plt.subplots(4, 6, figsize=(6*6,4.5*4))
    for i in range(len(datasets)):
        sorted_indices = np.array(scores2[i]).argsort()
        x = [datasets[s] for s in sorted_indices][1:]
        y1 = np.array(scores1[i])[sorted_indices][1:]
        y2 = np.array(scores2[i])[sorted_indices][1:]
        metric = "ROC-AUC"
        if i>=9 :
            y1 = [y_*-1 for y_ in y1]
            metric = 'RMSE'
        min_y1,max_y1 = min(y1),max(y1)
        min_y2,max_y2 = min(y2),max(y2)

        row = i//3
        col = (i%3)*2

        axes[row,col].bar(x, y1)
        axes[row,col].set_title(datasets[i])
        axes[row,col].set_xlabel('Source Dataset')
        axes[row,col].set_ylabel(metric)
        margin = (max_y1-min_y1)/10
        axes[row,col].set_ylim(min_y1-margin,max_y1+margin)
        axes[row,col].tick_params(axis='x', rotation=90)

        # axes[row,col].text(0.1, 1.1, f'({i+1})', ha='center', va='center', fontsize=14, color='black', transform=axes[row,col].transAxes)

        axes[row,col+1].bar(x, y2+10,bottom=-10,color="orange")
        axes[row,col+1].set_title(name+"-"+datasets[i])
        axes[row,col+1].set_xlabel('Source Dataset')
        axes[row,col+1].set_ylabel(name)
        margin = (max_y2-min_y2)/10
        axes[row,col+1].set_ylim(min_y2-margin,max_y2+margin)
        axes[row,col+1].tick_params(axis='x', rotation=90)

    fig.tight_layout()
    # fig.show()
    fig.savefig(os.path.join(root_path, f"{name}.jpg"))


visualize(finetune_scores, PGM_distance, "PGM")
visualize(finetune_scores, molecule_distance, "Molecule")
visualize(finetune_scores, PGM_distance + molecule_distance*0.281, "Mix")

def transfermap(scores, name):
    plt.figure(figsize=(8,8))
    plt.imshow(scores, cmap='viridis', interpolation='nearest')
    plt.xticks(range(12), datasets, rotation=90) 
    plt.yticks(range(12), datasets)
    plt.colorbar(shrink=0.7)
    for i in range(12):
        for j in range(12):
            plt.text(j, i, f"{scores[i,j]:.2f}", ha='center', va='center', color='white')
    plt.title(f"Transfer Map : {name}")
    plt.tight_layout()
    plt.savefig(os.path.join(root_path, f"tranfermap_{name}.jpg"))

transfermap(PGM_distance, "PGM")
transfermap(PGM_distance + molecule_distance*0.281, "Mix")