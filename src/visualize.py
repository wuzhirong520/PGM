import os
import numpy as np
import matplotlib.pyplot as plt

datasets = ['MUV', 'BACE', 'BBBP', 'ClinTox', 'SIDER','ToxCast', 'HIV', 'PCBA', 'Tox21', 'FreeSolv', 'Lipophilicity', 'ESOL']
finetune_scores = [[999999999.0, 0.7873669323416496, 0.7777836199478221, 0.7699824876520696, 0.7491559723061587, 0.7807813056356621, 0.7877496439008448, 0.8150619429448567, 0.7801018656679727, 0.7648326563110038, 0.7860839983610644, 0.7596532836349287],
                    [0.699271499644634, 999999999.0, 0.7112651030561479, 0.7212153518123667, 0.710998578535892, 0.7261904761904762, 0.6957178393745558, 0.7195273631840795, 0.73045486851457, 0.7053127221037669, 0.7243248045486852, 0.6972281449893389],
                    [0.9380337732919255, 0.9489033385093169, 999999999.0, 0.9456521739130435, 0.9419642857142858, 0.9546777950310559, 0.9497282608695652, 0.9450213509316769, 0.9414790372670807, 0.9430803571428571, 0.9252232142857142, 0.9411393633540373],
                    [0.7508437147708948, 0.8193469326597885, 0.8540587496610871, 999999999.0, 0.8366537879760834, 0.8150231174279721, 0.8173027526863308, 0.7709144940565378, 0.7869629122251237, 0.7776106996589466, 0.7702500463775561, 0.7399949341438703],
                    [0.6209043435004193, 0.6281871410568144, 0.6234719934746416, 0.6196350378869614, 999999999.0, 0.6275156150876701, 0.6061787386039481, 0.6058200093459737, 0.6354407733626486, 0.621568451740306, 0.6177553600938095, 0.6224797757561747],
                    [0.6498351281788607, 0.6551176908287238, 0.6604289880621544, 0.656811559317882, 0.659352167304919, 999999999.0, 0.6447853837792411, 0.6624486988821054, 0.6452161783593846, 0.6609343554895913, 0.6614340729432195, 0.6579337299642668],
                    [0.8289593743876151, 0.8090293087399569, 0.8171296296296295, 0.8106636108661571, 0.812541335978836, 0.8057392710170488, 999999999.0, 0.7981548843817362, 0.8108373750734862, 0.7963361013129531, 0.7970464677640604, 0.7987688002155595],
                    [0.8207827065052304, 0.8238749027261603, 0.8234661840647646, 0.8239249963205644, 0.8258107548658267, 0.8260906362034485, 0.8208228176918884, 999999999.0, 0.8267025469461495, 0.8239807851867574, 0.8216535160089318, 0.8240880041384175],
                    [0.7530226612888806, 0.7586637836209992, 0.7656900167500761, 0.7619578955096205, 0.7591310192687527, 0.766976389119144, 0.7562487276274534, 0.757900131075, 999999999.0, 0.7660450613424018, 0.7583954650033673, 0.7544778134006755],
                    [-3.202622890472412, -2.2877867221832275, -3.0911046266555786, -2.485343813896179, -3.818617343902588, -2.849574565887451, -1.9228723645210266, -1.7011306285858154, -3.065954804420471, 999999999.0, -2.7069114446640015, -2.640520453453064],
                    [-0.8480665981769562, -0.8389024138450623, -0.8416616916656494, -0.8695200979709625, -0.8569908440113068, -0.8609018623828888, -0.8891417384147644, -0.8190142214298248, -0.8461355865001678, -0.8553101718425751, 999999999.0, -0.896291047334671],
                    [-1.1760368943214417, -1.1653852462768555, -1.251383900642395, -1.2625454664230347, -1.2320400476455688, -1.2444083094596863, -1.2710844278335571, -1.1793659925460815, -1.1881128549575806, -1.1903642416000366, -1.2583816051483154, 999999999.0],
                    ]
PGM_scores =   [[0.0, 1.7232850950676948, 2.24021656322293, 1.5452966908924282, 0.567035676795058, 0.03526793307173648, 0.32554140489082783, 0.024315959308296442, 0.3396617466933094, 9.953791741281748, 1.4250879758037627, 5.504459259100258], 
                [1.7232850950676948, 0.0, 2.854190533980727, 2.3187336046248674, 1.8128186638932675, 1.7233403923455626, 1.751066738506779, 1.723094319459051, 1.7555952945258468, 10.09291154332459, 2.2449619427789003, 5.754615995101631], 
                [2.24021656322293, 2.854190533980727, 0.0, 2.7210655389353633, 2.309759147465229, 2.240116009488702, 2.261977642774582, 2.2399582667276263, 2.2665728465653956, 10.192339541390538, 2.6403958327136934, 5.954598309472203],
                [1.5452966908924282, 2.3187336046248674, 2.7210655389353633, 0.0, 1.6454182332381606, 1.5454144158866256, 1.5786181029397994, 1.545167324366048, 1.5819650434423238, 10.071475990116596, 2.1026417380198836, 5.719633190892637], 
                [0.567035676795058, 1.8128186638932675, 2.309759147465229, 1.6454182332381606, 0.0, 0.5668698941008188, 0.652770177111961, 0.5664427953888662, 0.6597510946448892, 9.969827951863408, 1.5338575758505613, 5.53106889128685], 
                [0.03526793307173648, 1.7233403923455626, 2.240116009488702, 1.5454144158866256, 0.5668698941008188, 0.0, 0.3255320916650817, 0.027000351110473275, 0.3397367618163116, 9.953802218660712, 1.4251559332478791, 5.504461005330086], 
                [0.32554140489082783, 1.751066738506779, 2.261977642774582, 1.5786181029397994, 0.652770177111961, 0.3255320916650817, 0.0, 0.32446161640109494, 0.46810779167572036, 9.959253948181868, 1.4616329281125218, 5.5121141485869884], 
                [0.024315959308296442, 1.723094319459051, 2.2399582667276263, 1.545167324366048, 0.5664427953888662, 0.027000351110473275, 0.32446161640109494, 0.0, 0.3386395110283047, 9.953761473298073, 1.4248317165765911, 5.5044167675077915], 
                [0.3396617466933094, 1.7555952945258468, 2.2665728465653956, 1.5819650434423238, 0.6597510946448892, 0.3397367618163116, 0.46810779167572036, 0.3386395110283047, 0.0, 9.95845883153379, 1.4650181401520967, 5.514807999134064],
                [9.953791741281748, 10.09291154332459, 10.192339541390538, 10.071475990116596, 9.969827951863408, 9.953802218660712, 9.959253948181868, 9.953761473298073, 9.95845883153379, 0.0, 10.056322207674384, 11.395687470212579], 
                [1.4250879758037627, 2.2449619427789003, 2.6403958327136934, 2.1026417380198836, 1.5338575758505613, 1.4251559332478791, 1.4616329281125218, 1.4248317165765911, 1.4650181401520967, 10.056322207674384, 0.0, 5.693847197107971], 
                [5.504459259100258, 5.754615995101631, 5.954598309472203, 5.719633190892637, 5.53106889128685, 5.504461005330086, 5.5121141485869884, 5.5044167675077915, 5.514807999134064, 11.395687470212579, 5.693847197107971, 0.0]]

molecule_sims =[[999990.0, 0.12462606014594355, 0.11566875140963492, 0.10668096203344488, 0.10597707154404834, 0.09901114557112117, 0.11423365953017088, 0.13649573278662402, 0.09774699583503783, 0.0700319506601435, 0.1284080579442933, 0.08668308419433289],
                [0.12462606014594073, 999990.0, 0.11333427695840967, 0.10710789317954773, 0.10666955315230382, 0.0940397896008027, 0.10573547259419444, 0.12597626213096502, 0.0919437211231946, 0.06300170798322118, 0.1259512578691687, 0.07963160732887763], 
                [0.11566875140963456, 0.11333427695840624, 999990.0, 0.10145849042761601, 0.10102068042049925, 0.09303324439369545, 0.1018859390167364, 0.11491080416805291, 0.09161676591486996, 0.0676602990203496, 0.11207886232778785, 0.08199903783860883], 
                [0.10668096203344264, 0.10710789317954582, 0.1014584904276194, 999990.0, 0.09583312768826856, 0.08877172383778686, 0.09524047534947819, 0.10686955908368505, 0.08788989680385134, 0.06484109943661974, 0.10357634300773239, 0.07798343891306066], 
                [0.10597707154405597, 0.10666955315231229, 0.1010206804205022, 0.09583312768827806, 999990.0, 0.08690361271860426, 0.09403016172816012, 0.10620034882287667, 0.08590568149623908, 0.061593187761429295, 0.1040572737454621, 0.07478538844987426], 
                [0.09901114557112298, 0.0940397896008034, 0.09303324439369781, 0.08877172383779085, 0.08690361271860716, 999990.0, 0.089808889181329, 0.09897010886279686, 0.08758081630544085, 0.07227932365735398, 0.0942784278563336, 0.08075655984305748], 
                [0.1142336595301674, 0.10573547259419415, 0.10188593901673552, 0.09524047534947515, 0.09403016172815257, 0.08980888918132157, 999990.0, 0.1130534513636432, 0.08878423712160723, 0.06587142710059908, 0.10751894835820426, 0.0804695903022707], 
                [0.13649573278662985, 0.1259762621309668, 0.11491080416804811, 0.10686955908368762, 0.10620034882286716, 0.09897010886279692, 0.1130534513636416, 999990.0, 0.09782482466300652, 0.0694188159288599, 0.12778011177033635, 0.08586948650819959], 
                [0.09774699583504137, 0.09194372112319893, 0.09161676591487479, 0.08788989680385657, 0.0859056814962392, 0.0875808163054419, 0.08878423712160624, 0.09782482466300411, 999990.0, 0.07248844421174826, 0.09280856594506666, 0.0803883034061875], 
                [0.07003195066013902, 0.0630017079832232, 0.06766029902034931, 0.06484109943661996, 0.06159318776142934, 0.07227932365735358, 0.06587142710059968, 0.06941881592886313, 0.07248844421174969, 999990.0, 0.06518190661077537, 0.07676166787233439], 
                [0.1284080579442998, 0.12595125786917558, 0.11207886232778864, 0.10357634300774464, 0.10405727374545598, 0.09427842785633453, 0.10751894835821023, 0.12778011177033735, 0.09280856594506796, 0.06518190661077992, 999990.0, 0.0816838346872109], 
                [0.08668308419433053, 0.07963160732887324, 0.08199903783860259, 0.07798343891305745, 0.07478538844987077, 0.08075655984305208, 0.08046959030226727, 0.08586948650819792, 0.08038830340618641, 0.07676166787232824, 0.0816838346872033, 999990.0]]

PGM_distance = np.array(PGM_scores)
molecule_distance = 1 / np.array(molecule_sims)

root_path = "./visualize"

def visualize(scores1, scores2, name):
    fig, axes = plt.subplots(4, 6, figsize=(6*6,4.5*4))
    for i in range(len(datasets)):
        sorted_indices = np.array(scores2[i]).argsort()
        x = [datasets[s] for s in sorted_indices][1:]
        y1 = np.array(scores1[i])[sorted_indices][1:]
        y2 = np.array(scores2[i])[sorted_indices][1:]
        metric = "ROC-AUC"
        if i>=9 :
            y1 = [y_*-1 for y_ in y1]
            metric = 'RMSE'
        min_y1,max_y1 = min(y1),max(y1)
        min_y2,max_y2 = min(y2),max(y2)

        row = i//3
        col = (i%3)*2

        axes[row,col].bar(x, y1)
        axes[row,col].set_title(datasets[i])
        axes[row,col].set_xlabel('Source Dataset')
        axes[row,col].set_ylabel(metric)
        margin = (max_y1-min_y1)/10
        axes[row,col].set_ylim(min_y1-margin,max_y1+margin)
        axes[row,col].tick_params(axis='x', rotation=90)

        # axes[row,col].text(0.1, 1.1, f'({i+1})', ha='center', va='center', fontsize=14, color='black', transform=axes[row,col].transAxes)

        axes[row,col+1].bar(x, y2+10,bottom=-10,color="orange")
        axes[row,col+1].set_title(name+"-"+datasets[i])
        axes[row,col+1].set_xlabel('Source Dataset')
        axes[row,col+1].set_ylabel(name)
        margin = (max_y2-min_y2)/10
        axes[row,col+1].set_ylim(min_y2-margin,max_y2+margin)
        axes[row,col+1].tick_params(axis='x', rotation=90)

    fig.tight_layout()
    # fig.show()
    fig.savefig(os.path.join(root_path, f"{name}.jpg"))

# visualize(finetune_scores, os.path.join(root_path,"finetune"))
# visualize(PGM_scores, os.path.join(root_path,"PGM"))
# visualize(molecule_sims, os.path.join(root_path,"molecule"))

visualize(finetune_scores, PGM_distance, "PGM")
visualize(finetune_scores, molecule_distance, "Molecule")
visualize(finetune_scores, PGM_distance + molecule_distance*2.164, "Mix")